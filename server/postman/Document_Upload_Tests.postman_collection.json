{
  "info": {
    "name": "Document Upload Tests",
    "description": "Postman collection for testing document upload functionality",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login Employee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"employee@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    console.log('Token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Document Upload",
      "item": [
        {
          "name": "Upload Document - Success",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "documentType",
                  "value": "passport",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "My passport document",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has success property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});",
                  "",
                  "pm.test('Response has data property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.be.an('object');",
                  "});",
                  "",
                  "pm.test('Document has required fields', function () {",
                  "    const response = pm.response.json();",
                  "    const document = response.data;",
                  "    pm.expect(document.employee).to.exist;",
                  "    pm.expect(document.fileName).to.exist;",
                  "    pm.expect(document.documentType).to.equal('passport');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Upload Document - No File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "documentType",
                  "value": "passport",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message about missing file', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('No file uploaded');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Upload Document - Invalid File Type",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "documentType",
                  "value": "passport",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message about invalid file type', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Invalid file type');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Upload Document - Missing Document Type",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message about missing document type', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Document type is required');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Upload Document - Unauthorized",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "documentType",
                  "value": "passport",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Document Retrieval",
      "item": [
        {
          "name": "Get All Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});",
                  "",
                  "pm.test('Response has count and data properties', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.count).to.be.a('number');",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Document by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/{{documentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "{{documentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});",
                  "",
                  "pm.test('Response has data property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.be.an('object');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Document - Not Found",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/507f1f77bcf86cd799439011",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "507f1f77bcf86cd799439011"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message about document not found', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Document not found');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Documents - Unauthorized",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Document Deletion",
      "item": [
        {
          "name": "Delete Document",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/{{documentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "{{documentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success property', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "});",
                  "",
                  "pm.test('Response has success message', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('deleted successfully');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Document - Not Found",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/507f1f77bcf86cd799439011",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "507f1f77bcf86cd799439011"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message about document not found', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Document not found');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Delete Document - Unauthorized",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/documents/{{documentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "{{documentId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
} 