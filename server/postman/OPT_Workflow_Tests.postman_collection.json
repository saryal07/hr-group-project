{
  "info": {
    "name": "OPT Workflow Tests",
    "description": "Postman collection for testing OPT visa workflow functionality",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "employeeToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "hrToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "documentId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login Employee",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testemployee\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('employeeToken', response.token);",
                  "    console.log('Employee token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login HR Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('hrToken', response.token);",
                  "    console.log('HR token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Employee Document Upload",
      "item": [
        {
          "name": "Upload OPT Receipt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "documentType",
                  "value": "opt_receipt",
                  "type": "text"
                },
                {
                  "key": "description",
                  "value": "OPT Receipt for work authorization",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('documentId', response.data._id);",
                  "    console.log('Document ID saved:', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Workflow Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has workflow steps', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    pm.expect(response.data.length).to.equal(4);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Try Upload OPT EAD Before Approval",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "documentType",
                  "value": "opt_ead",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message about previous step', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Previous step must be approved');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "HR Document Management",
      "item": [
        {
          "name": "Get All Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hrToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/hr/documents",
              "host": ["{{baseUrl}}"],
              "path": ["api", "hr", "documents"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Pending Documents",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hrToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/hr/documents/pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "hr", "documents", "pending"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Approve Document",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hrToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"feedback\": \"Document approved. Please proceed to next step.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/hr/documents/{{documentId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "hr", "documents", "{{documentId}}", "approve"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Document approved', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.status).to.equal('approved');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Reject Document",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hrToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"feedback\": \"Document is unclear. Please upload a clearer copy.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/hr/documents/{{documentId}}/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "hr", "documents", "{{documentId}}", "reject"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Document rejected', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data.status).to.equal('rejected');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "I-983 Template Downloads",
      "item": [
        {
          "name": "Download Empty I-983 Template",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/templates/i983-empty",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "templates", "i983-empty"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Download Sample I-983 Template",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{employeeToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/documents/templates/i983-sample",
              "host": ["{{baseUrl}}"],
              "path": ["api", "documents", "templates", "i983-sample"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 404', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "HR Workflow Management",
      "item": [
        {
          "name": "Get OPT Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hrToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/hr/employees/opt",
              "host": ["{{baseUrl}}"],
              "path": ["api", "hr", "employees", "opt"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Workflow Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{hrToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/hr/workflow-summary",
              "host": ["{{baseUrl}}"],
              "path": ["api", "hr", "workflow-summary"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has workflow data', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.data).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
} 